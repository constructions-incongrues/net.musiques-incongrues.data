<?php

/**
 * BaseLink
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $url
 * @property string $domain_parent
 * @property string $domain_fqdn
 * @property string $mime_type
 * @property string $contributed_at
 * @property integer $contributor_id
 * @property string $contributor_name
 * @property integer $comment_id
 * @property integer $discussion_id
 * @property string $discussion_name
 * @property string $availability
 * @property timestamp $expanded_at
 * 
 * @method integer   getId()               Returns the current record's "id" value
 * @method string    getUrl()              Returns the current record's "url" value
 * @method string    getDomainParent()     Returns the current record's "domain_parent" value
 * @method string    getDomainFqdn()       Returns the current record's "domain_fqdn" value
 * @method string    getMimeType()         Returns the current record's "mime_type" value
 * @method string    getContributedAt()    Returns the current record's "contributed_at" value
 * @method integer   getContributorId()    Returns the current record's "contributor_id" value
 * @method string    getContributorName()  Returns the current record's "contributor_name" value
 * @method integer   getCommentId()        Returns the current record's "comment_id" value
 * @method integer   getDiscussionId()     Returns the current record's "discussion_id" value
 * @method string    getDiscussionName()   Returns the current record's "discussion_name" value
 * @method string    getAvailability()     Returns the current record's "availability" value
 * @method timestamp getExpandedAt()       Returns the current record's "expanded_at" value
 * @method Link      setId()               Sets the current record's "id" value
 * @method Link      setUrl()              Sets the current record's "url" value
 * @method Link      setDomainParent()     Sets the current record's "domain_parent" value
 * @method Link      setDomainFqdn()       Sets the current record's "domain_fqdn" value
 * @method Link      setMimeType()         Sets the current record's "mime_type" value
 * @method Link      setContributedAt()    Sets the current record's "contributed_at" value
 * @method Link      setContributorId()    Sets the current record's "contributor_id" value
 * @method Link      setContributorName()  Sets the current record's "contributor_name" value
 * @method Link      setCommentId()        Sets the current record's "comment_id" value
 * @method Link      setDiscussionId()     Sets the current record's "discussion_id" value
 * @method Link      setDiscussionName()   Sets the current record's "discussion_name" value
 * @method Link      setAvailability()     Sets the current record's "availability" value
 * @method Link      setExpandedAt()       Sets the current record's "expanded_at" value
 * 
 * @package    vanilla-miner
 * @subpackage model
 * @author     Constructions Incongrues
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLink extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('link');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             ));
        $this->hasColumn('url', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('domain_parent', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('domain_fqdn', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('mime_type', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('contributed_at', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('contributor_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('contributor_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('comment_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('discussion_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('discussion_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('availability', 'string', null, array(
             'type' => 'string',
             'default' => 'unknown',
             ));
        $this->hasColumn('expanded_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('idx_url', array(
             'fields' => 
             array(
              'url' => 
              array(
              'length' => 512,
              ),
             ),
             'type' => 'unique',
             ));
        $this->index('idx_expanded_at', array(
             'fields' => 
             array(
              0 => 'expanded_at',
             ),
             ));
        $this->index('idx_availability', array(
             'fields' => 
             array(
              'availability' => 
              array(
              'length' => 11,
              ),
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}