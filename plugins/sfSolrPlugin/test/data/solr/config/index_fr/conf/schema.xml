<?xml version="1.0" encoding="UTF-8" ?>
<schema name="Index : index_fr - created by sfLucene - Solr version" version="1.1">
  <types>
   <fieldtype name="string"  class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
   
   <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <!-- Case insensitive stop word removal.
          add enablePositionIncrements=true in both the index and query
          analyzers to leave a 'gap' for more accurate phrase queries.
        -->
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
        <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
    
    <!-- numeric field types that store and index the text
         value verbatim (and hence don't support range queries, since the
         lexicographic ordering isn't equal to the numeric ordering) -->
    <fieldType name="integer" class="solr.IntField" omitNorms="true"/>
    <fieldType name="long" class="solr.LongField" omitNorms="true"/>
    <fieldType name="float" class="solr.FloatField" omitNorms="true"/>
    <fieldType name="double" class="solr.DoubleField" omitNorms="true"/>

    <!-- Numeric field types that manipulate the value into
         a string value that isn't human-readable in its internal form,
         but with a lexicographic ordering the same as the numeric ordering,
         so that range queries work correctly. -->
    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>
    
   
  </types>

 <fields>   
  <!-- general, field use by sfLucenePlugin -->
  <field name="sfl_guid"      type="string"   indexed="true"  stored="true"  multiValued="false" required="true"/>
  <field name="sfl_title"      type="string"   indexed="true"  stored="true"  multiValued="false" required="false"/>
  <field name="sfl_description"      type="string"   indexed="true"  stored="true"  multiValued="false" required="false"/>
  <field name="sfl_type"      type="string"   indexed="true"  stored="true"  multiValued="false" required="false"/>
  <field name="sfl_uri"      type="string"   indexed="true"  stored="true"  multiValued="false" required="false"/>
  <field name="sfl_category"      type="text"   indexed="true"  stored="true"  multiValued="false" required="false"/>
  <field name="sfl_categories_cache"      type="string"   indexed="true"  stored="true"  multiValued="false" required="false"/>
  <field name="sfl_model"      type="string"   indexed="true"  stored="true"  multiValued="false" required="false"/>
  <field name="sfl_all"      type="text"   indexed="true"  stored="false"  multiValued="true" required="false"/>
  
  <!-- merged model information into one document -->
  <field name="index_fr"   type="string"   indexed="true"  stored="true"  multiValued="false" />
  <field name='id' type='integer' stored='true' multiValued='false' required='false' />
  <field name='name' type='text' stored='true' multiValued='false' required='false' />
  <field name='skills' type='text' stored='true' multiValued='true' required='false' />
  <field name='description' type='text' stored='true' multiValued='false' required='false' />
  <field name='level' type='integer' stored='true' multiValued='false' required='false' />
 </fields>

 <!-- field to use to determine and enforce document uniqueness. -->
 <uniqueKey>sfl_guid</uniqueKey>

 <!-- field for the QueryParser to use when an explicit fieldname is absent -->
 <defaultSearchField>sfl_all</defaultSearchField>

 <!-- 
      copyField commands copy one field to another at the time a document
      is added to the index.  It's used either to index the same field differently,
      or to add multiple fields to the same field for easier/faster searching.  
 -->
  <solrQueryParser defaultOperator="OR"/>
 
  <copyField source='id' dest='sfl_all' />
  <copyField source='name' dest='sfl_all' />
  <copyField source='skills' dest='sfl_all' />
  <copyField source='description' dest='sfl_all' />
  <copyField source='level' dest='sfl_all' />
 
</schema>